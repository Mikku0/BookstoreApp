<!DOCTYPE html>
<html lang="pl">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Księgarnia Internetowa</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="icon" type="image/x-icon" href="~/favicon.ico" />
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow-sm">
            <div class="container">
                <a class="navbar-brand fw-bold" asp-controller="Home" asp-action="Index">
                    Bookstore
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Index">
                                Strona Główna
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Books" asp-action="Index">
                                Książki
                            </a>
                        </li>

                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            var userTypeForCart = User.FindFirst("UserType")?.Value;
                            if (userTypeForCart == "Client")
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Cart" asp-action="Index">
                                        Koszyk
                                        <span class="badge bg-warning text-dark ms-1" id="cart-count">0</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>

                    @{
                        var userType = User.Identity?.IsAuthenticated == true
                            ? User.FindFirst("UserType")?.Value
                            : "Guest";
                        var firstName = User.Identity?.IsAuthenticated == true
                            ? User.FindFirst("FirstName")?.Value
                            : null;

                        var label = userType switch
                        {
                            "Manager" => "Kierownik",
                            "Employee" => "Pracownik",
                            "Client" => "Klient",
                            _ => "Gość"
                        };

                        var badgeClass = userType switch
                        {
                            "Manager" => "bg-danger",
                            "Employee" => "bg-success",
                            "Client" => "bg-info",
                            _ => "bg-secondary"
                        };
                    }

                    <div class="d-flex align-items-center text-white me-3">
                        <span class="badge @badgeClass">@label</span>
                    </div>

                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                                   data-bs-toggle="dropdown" aria-expanded="false">
                                    Witaj, @firstName!
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    @if (userType == "Client")
                                    {
                                        <li><a class="dropdown-item" href="@Url.Action("Dashboard", "Client")">Mój Panel</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("MyOrders", "Client")">Moje Zamówienia</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Profile", "Client")">Profil</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", "Cart")">Koszyk</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                    }
                                    @if (userType == "Employee")
                                    {
                                        <li><a class="dropdown-item" href="@Url.Action("Dashboard", "Employee")">Panel Pracownika</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("ManageOrders", "Employee")">Zarządzaj Zamówieniami</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                    }
                                    @if (userType == "Manager")
                                    {
                                        <li><a class="dropdown-item" href="@Url.Action("Dashboard", "Manager")">Panel Kierownika</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Reports", "Manager")">Raporty</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("AddBook", "Manager")">Dodaj Książkę</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("ManageBooks", "Manager")">Zarządzaj Książkami</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                    }
                                    <li>
                                        <form method="post" action="@Url.Action("Logout", "Users")" class="d-inline">
                                            <button type="submit" class="dropdown-item text-danger">Wyloguj się</button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Users" asp-action="Login">
                                    Logowanie
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("ChooseRegistration", "Users")">
                                    Rejestracja
                                </a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>

    <main role="main">
        @RenderBody()
    </main>

    <footer class="border-top footer text-muted mt-5">
        <div class="container">
            <div class="row py-4">
                <div class="col-12 text-center">
                    &copy; 2025 - Księgarnia Internetowa
                    <div class="mt-2">
                        <small class="text-muted">
                            Mikołaj Wróblewski, s27583
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function updateCartCount() {
            @if (User.Identity?.IsAuthenticated == true)
            {
                <text>
                    fetch('/Cart/GetCartItemCount')
                        .then(response => response.json())
                        .then(count => {
                            const cartBadge = document.getElementById('cart-count');
                            if (cartBadge) {
                                cartBadge.textContent = count;
                                cartBadge.classList.add('animate__animated', 'animate__pulse');
                                setTimeout(() => {
                                    cartBadge.classList.remove('animate__animated', 'animate__pulse');
                                }, 1000);
                            }
                        })
                        .catch(error => console.error('Error:', error));
                </text>
            }
        }

        document.addEventListener('DOMContentLoaded', updateCartCount);

        setInterval(updateCartCount, 30000);
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
